version: '3.7'
services:
    nginx:
        image: nginx:latest
        container_name: nginx-phpdocker
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:   
            - ./conf/nginx/conf.d/:/etc/nginx/conf.d/ 
            - ./conf/nginx/html:/usr/share/nginx/html
            - ./conf/nginx/ssl:/etc/nginx/ssl
            - ./www:/var/www
            - ./logs:/var/log/nginx

        environment:
            NGINX_HOST: localhost
            NGINX_PORT: 8080

        depends_on:
            - php
        networks:
          - phpdocker

    php:
        # у нас свой образ для PHP, указываем путь к нему и говорим что его надо собрать
        build: ./images/php
        environment:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: myapp
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
        # этот образ будет общаться с mysql
        depends_on:
            - mysql
        # монтируем директорию с проектами
        volumes:
            - ./www:/var/www
        networks:
          - phpdocker
            
    phpmyadmin:
        image: phpmyadmin/phpmyadmin        
        container_name: phpmyadmin-phpdocker
        restart: unless-stopped
        ports:
            - 8090:80 
        environment:
          PMA_HOST: mysql
          MYSQL_ROOT_PASSWORD: secret       
        depends_on:
            - mysql
        networks:
          - phpdocker

    mysql:

        image: mysql:8
        ports:
            - "3306:3306"
        # задаем пароль для root пользователя
        environment:
            # прописываем название нашего MySQL хоста
            PMA_HOST: mysql
            MYSQL_USERNAME: root
            MYSQL_ROOT_PASSWORD: secret
        networks:
          - phpdocker
networks:
  phpdocker:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16
volumes:
  mysql-data:
    driver: local